<% if flash[:errors] %>
	<% flash[:errors].each do |error| %>
  	<div class='error'><p class='warning'><%= error %></p></div>
  <% end %>
<% end %>

<div class='box'>
	<h1>Attempting: <%= @record.title %></h1>
	<input type='hidden' name='record_id' value='<%= @record.id %>'/>
	<input type='hidden' name='video_string' id='videoString'/>
  <video muted autoplay id='video'></video>
  <input type='button' value='Record' id='record'>
	<input type='button' value='Stop' id='stop'>
	<input type='button' value='Reset' id='reset' style='visibility: hidden'>
	<br/>

	<input type='submit' id='submit'/>

	<div class='clip'></div>
</div>

<script>
	var errorCallback = function(e) {
    console.log('Rejected!', e);
  };

	let video = document.getElementById('video');
  let record = document.getElementById('record');
  let stop = document.getElementById('stop');
  let reset = document.getElementById('reset');
  let submit = document.getElementById('submit');
  let videoString = document.getElementById('videoString');
  var blob;

  let chunks = [];

	navigator.getUserMedia  = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;

	if (navigator.getUserMedia) {
	  navigator.getUserMedia({audio: false, video: true}, function(stream) {
	    video.src = window.URL.createObjectURL(stream);

	    var mediaRecorder = new MediaRecorder(stream);

	    record.onclick = function() {
	      mediaRecorder.start();
	      record.style.background = "red";
	    }

	    stop.onclick = function() {
	      mediaRecorder.stop();
	      record.style.background = "";
	    }

	    mediaRecorder.onstop = function(e) {

	      blob = new Blob(chunks, { 'type' : 'video/mp4; codecs=avc1.64001E', 'endings': 'native' });
	      // blob = new Blob(chunks, { 'type' : 'video/mp4; codecs=H264' });
	      chunks = [];

	      console.log(blob.type)

	      video.src = URL.createObjectURL(blob);
	      video.controls = true;
	      reset.style.visibility = 'visible';

	      reset.onclick = function () {
	      	videoString.value = '';
	      	video.src = window.URL.createObjectURL(stream);
	      	reset.style.visibility = 'hidden';
	      	video.controls = false;
	      }
	    }

	    submit.onclick = function () {
	    	let fd = new FormData();
	    	fd.append('file', blob);
	    	fd.append('record_id', Number('<%= @record.id %>'));

	    	$.ajax({
		      type: 'POST', 
		      url: '/attempt',
		      data: fd,
					processData: false,
					contentType: false,
		      success: function(data) {
		      	window.location.href = '/record/<%= @record.id %>'
		      },
		      error: function(data) {
		      	window.location.reload();
		      },
		    });
	    }

	    mediaRecorder.ondataavailable = function(e) {
	      chunks.push(e.data);
	    }

	  }, errorCallback);
	} else {

	}
</script>